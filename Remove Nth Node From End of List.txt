**Remove Nth Node From End of List**

   **Problem Statement**: Given a linked list, remove the `nth` node from the end and return its head.

   **Code Solution**:
   ```java
   public ListNode removeNthFromEnd(ListNode head, int n) {
       ListNode dummy = new ListNode(0);
       dummy.next = head;
       ListNode first = dummy, second = dummy;

       for (int i = 0; i <= n; i++) {
           first = first.next;
       }

       while (first != null) {
           first = first.next;
           second = second.next;
       }

       second.next = second.next.next;
       return dummy.next;
   }
   ```

   **Example Input**: `head = [1,2,3,4,5]`, `n = 2`
   **Example Output**: `[1, 2, 3, 5]`

   **Execution Explanation**:
   - **Step 1**: Initialize dummy list node, set pointers `first`/`second`.
     - Move `first` ahead by `n+1`, allowing `second` to hit target.

   - **Step 2**: Move both pointers until `first` hits end.
     - Delete targeted node using `second`.
   - **Output**: `[1, 2, 3, 5]`
