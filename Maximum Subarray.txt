**Maximum Subarray**

    **Problem Statement**: Find the contiguous subarray (containing at least one number) with the largest sum.

    **Code Solution**:
    ```java
    public int maxSubArray(int[] nums) {
        int max = nums[0];
        int currentSum = nums[0];

        for (int i = 1; i < nums.length; i++) {
            currentSum = Math.max(nums[i], currentSum + nums[i]);
            max = Math.max(max, currentSum);
        }
        return max;
    }
    ```

    **Example Input**: `nums = [-2,1,-3,4,-1,2,1,-5,4]`
    **Example Output**: `6`

    **Execution Explanation**:
    - **Step 1**: Track `currentSum` and `max` sum found.
      - Choose maximum as setup of new subarray or extending.
      - Dynamically update `max` to greatest found at each step.

    - **Output**: Largest sum achieved
