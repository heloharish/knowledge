**Longest Common Prefix**

   **Problem Statement**: Find the longest common prefix string amongst an array of strings. If there is no common prefix, return "".

   **Code Solution**:
   ```java
   public String longestCommonPrefix(String[] strs) {
       if (strs == null || strs.length == 0) return "";

       String prefix = strs[0];
       
       for (int i = 1; i < strs.length; i++) {
           while (strs[i].indexOf(prefix) != 0) {
               prefix = prefix.substring(0, prefix.length() - 1);
               if (prefix.isEmpty()) return "";
           }
       }
       return prefix;
   }
   ```

   **Example Input**: `strs = ["flower","flow","flight"]`
   **Example Output**: `"fl"`

   **Execution Explanation**:
   - **Step 1**: Assume the first string is the common prefix.
   - **Step 2**: Compare prefix to each string.
     - Check "flower": prefix is `"flower"`.
     - Check "flow": prefix shortens till `"flo"` then `"fl"`.
       - Shortens when sequence part differs.
     - Continues through others, comparing start, finding `"fl"`.
     - Ensure prefix shortens when unmatched to any in loop.

   - **Output**: `"fl"`
