**Valid Palindrome**

   **Problem Statement**: Determine if a string `s` is a palindrome, considering only alphanumeric characters and ignoring cases.

   **Code Solution**:
   ```java
   public boolean isPalindrome(String s) {
       int left = 0, right = s.length() - 1;
       while (left < right) {
           while (left < right && !Character.isLetterOrDigit(s.charAt(left))) left++;
           while (left < right && !Character.isLetterOrDigit(s.charAt(right))) right--;
           if (Character.toLowerCase(s.charAt(left)) != Character.toLowerCase(s.charAt(right))) return false;
           left++;
           right--;
       }
       return true;
   }
   ```

   **Example Input**: `s = "A man, a plan, a canal: Panama"`
   **Example Output**: `true`

   **Execution Explanation**:
   - **Step 1**: Utilize two-pointer technique.
   - **Step 2**: Filter non-alphanumeric characters.
     - Move pointers: skip non-alphanumeric, ensure lowercase equivalence.
     - Continue till meeting middle.
     - Work through whether start/end turn into a mirror image.

   - **Output**: `true` (as it's a palindrome)
