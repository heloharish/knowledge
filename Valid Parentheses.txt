**Valid Parentheses**

   **Problem Statement**: Given a string containing just the characters `'('`, `')'`, `'{'`, `'}'`, `'['`, `']'`, determine if it is valid.

   **Code Solution**:
   ```java
   public boolean isValid(String s) {
       Stack<Character> stack = new Stack<>();
       for (char c : s.toCharArray()) {
           if (c == '(' || c == '{' || c == '[') {
               stack.push(c);
           } else {
               if (stack.isEmpty()) return false;
               char top = stack.pop();
               if ((c == ')' && top != '(') ||
                   (c == '}' && top != '{') ||
                   (c == ']' && top != '[')) {
                   return false;
               }
           }
       }
       return stack.isEmpty();
   }
   ```

   **Example Input**: `s = "({[]})"`
   **Example Output**: `true`

   **Execution Explanation**:
   - **Step 1**: Use stack to track open brackets.
     - Push if current character is an open bracket.
     - Pop and check if matching when closing bracket is found.

   - **Step 2**: Validate stack empty for matching overall.
   - **Output**: `true`
